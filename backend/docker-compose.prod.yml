version: "3.7"

services:
  db:
    restart: unless-stopped
    image: postgres
    container_name: buckets-postgres
    environment:
      - POSTGRES_USER=$BUCKETS_DB_USER
      - POSTGRES_PASSWORD=$BUCKETS_DB_PASS
      - POSTGRES_DB=$BUCKETS_DB_NAME
      - POSTGRES_PORT=$BUCKETS_DB_PORT
    volumes:
      - database-data:/var/lib/postgresql/data/

  app:
    image: nnamdiibe/buckets:$BUCKETS_IMAGE_TAG
    depends_on:
      - db
      - redis
    env_file:
      - $BUCKETS_ENV_FILE
    restart: unless-stopped

  nginx:
    image: nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - app

  redis:
    image: redis:6.2-alpine
    restart: unless-stopped
    ports:
      - $BUCKETS_REDIS_PORT:$BUCKETS_REDIS_PORT
    command: redis-server --save 20 1 --loglevel warning --requirepass $BUCKETS_REDIS_PASSWORD
    volumes:
      - redis:/data

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  database-data:
  redis:
    driver: local
